<green>{user}<reset>@<green>{host}<reset>
========================
<green>OS<reset>: {distro.shortname} {distro.architecture}
<green>Kernel<reset>: {kernel.name} {kernel.version}
<green>Uptime<reset>: lua`
	-- Create a block to store locals in.
	if true then
		local function s(v) if v ~= 1 and v ~= 0 then return "s" else return "" end end
		local output = {}
		if uptime.days >= 1 then
			table.insert(output, ""..uptime.days.." day"..s(uptime.days))
		end
		if uptime.hours >= 1 then
			table.insert(output, ""..uptime.hours.." hour"..s(uptime.hours))
		end
		if uptime.minutes >= 1 then
			table.insert(output, ""..uptime.minutes.." minute"..s(uptime.minutes))
		elseif uptime.hours == 0 then
			table.insert(output, ""..uptime.seconds.." second"..s(uptime.seconds))
		end
		for i,v in pairs(output) do
			if i ~= #output then
				print(""..v..", ")
			else
				print(""..v)
			end
		end
	end`
<green>Packages<reset>: lua`
	if #packageManagers ~= 0 then
		for i,packageManager in pairs(packageManagers) do
			if packageManager.packages == 0 then
				table.remove(packageManagers, i)
			end
		end
		for i,packageManager in pairs(packageManagers) do
			if i ~= #packageManagers then
				print(""..packageManager.packages.." ("..packageManager.name.."), ")
			else
				print(""..packageManager.packages.." ("..packageManager.name..")")
			end
		end
	else print "0" end`
<green>Shell<reset>: {shell.name} {shell.version} bash`
	if [[ "$shell_name" = "zsh" ]]; then
		if [[ -d ~/.oh-my-zsh ]]; then
			printf "with $(cat ~/.zshrc | grep -m 1 --color=none ZSH_THEME= | cut -d"\"" -f 2)";
		fi;
	fi;`