<{distroColors.0}><bold>{user}<reset>@<{distroColors.0}><bold>{host}<reset>
========================
<{distroColors.1}><bold>OS<reset>: {distro.shortname} {distro.architecture}
<{distroColors.1}><bold>Kernel<reset>: {kernel.name} {kernel.version}
<{distroColors.1}><bold>Uptime<reset>: lua`
	-- Create a block to store locals in.
	if true then
		local function s(v) if v ~= 1 and v ~= 0 then return "s" else return "" end end
		local output = {}
		if uptime.days >= 1 then
			table.insert(output, ""..uptime.days.." day"..s(uptime.days))
		end
		if uptime.hours >= 1 then
			table.insert(output, ""..uptime.hours.." hour"..s(uptime.hours))
		end
		if uptime.minutes >= 1 then
			table.insert(output, ""..uptime.minutes.." minute"..s(uptime.minutes))
		elseif uptime.hours == 0 then
			table.insert(output, ""..uptime.seconds.." second"..s(uptime.seconds))
		end
		for i,v in pairs(output) do
			if i ~= #output then
				print(""..v..", ")
			else
				print(""..v)
			end
		end
	end`
<{distroColors.1}><bold>Packages<reset>: lua`
	if #packageManagers ~= 0 then
		for i,packageManager in pairs(packageManagers) do
			if packageManager.packages == 0 then
				table.remove(packageManagers, i)
			end
		end
		for i,packageManager in pairs(packageManagers) do
			if i ~= #packageManagers then
				print(""..packageManager.packages.." ("..packageManager.name.."), ")
			else
				print(""..packageManager.packages.." ("..packageManager.name..")")
			end
		end
	else print "0" end`
<{distroColors.1}><bold>Shell<reset>: {shell.name} {shell.version} bash`
	if [[ "$shell_name" = "zsh" ]]; then
		if [[ -d ~/.oh-my-zsh ]]; then
			printf "with $(cat ~/.zshrc | grep -m 1 --color=none ZSH_THEME= | cut -d"\"" -f 2)";
		fi;
	fi;`
lua`
	if resolution ~= nil then
		print("<{distroColors.1}><bold>Resolution<reset>: "..resolution.width.."x"..resolution.height)
	else
		print("<up 1>")
	end`
lua`
	if de ~= nil then
		print("<{distroColors.1}><bold>DE<reset>: "..de.name.." "..de.version)
	else
		print("<up 1>")
	end`
lua`
	if wm ~= nil then
		print("<{distroColors.1}><bold>WM<reset>: "..wm)
	else
		print("<up 1>")
	end`
lua`
	if cpu ~= nil then
		local freq,suffix = (cpu.freq >= 1000)
			and (cpu.freq / 1000),"GHz"
			or  cpu.freq,"MHz" 
		print("<{distroColors.1}><bold>CPU<reset>: "..cpu.name.." ("..cpu.cores..") @ "..freq..suffix)
	else
		print("<up 1>")
	end`
lua`
	if gpus ~= nil then
		if #gpus <= 1 then
			print("<{distroColors.1}><bold>GPU<reset>: "..gpus[1].brand.." "..gpus[1].name)
		else
			print("<{distroColors.1}><bold>GPUs<reset>:\n")
			for _,gpu in pairs(gpus) do
				print(" - "..gpu.brand.." "..gpu.name.."\n")
			end
		end
	else
		print("<up 1>")
	end`

<black><black-bg>   <red><red-bg>   <green><green-bg>   <yellow><yellow-bg>   <blue><blue-bg>   <magenta><magenta-bg>   <cyan><cyan-bg>   <white><white-bg>   <reset>
<255 8><255-bg 8>   <255 9><255-bg 9>   <255 10><255-bg 10>   <255 11><255-bg 11>   <255 12><255-bg 12>   <255 13><255-bg 13>   <255 14><255-bg 14>   <255 15><255-bg 15>   <reset>
